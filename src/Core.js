// Generated by CoffeeScript 1.4.0
(function() {

  window.APP = (function(win, doc) {
    "use strict";

    var Config, Events, defaults, extend;
    defaults = {
      baseUri: "",
      debug: false,
      stopMethod: "start",
      startMethod: "stop",
      delimiter: "."
    };
    extend = function(obj, src) {
      var key;
      for (key in src) {
        if (src.hasOwnProperty(key)) {
          obj[key] = src[key];
        }
      }
      return obj;
    };
    Config = (function() {
      var config;
      config = extend({}, defaults);
      return {
        get: function(key) {
          if (!key) {
            return config;
          }
          return config[key];
        },
        set: function(key, value) {
          if (typeof key === "object") {
            config = extend(config, key);
          }
          config[key] = value;
          return config;
        }
      };
    })();
    Events = (function() {
      return {
        bind: function(el, e, fn) {
          if (el.addEventListener) {
            return el.addEventListener(e, fn, false);
          } else if (el.attachEvent) {
            return el.attachEvent("on" + e, fn);
          }
        },
        unbind: function(el, e, fn) {
          if (el.removeEventListener) {
            return el.removeEventListener(e, fn, false);
          } else if (el.detachEvent) {
            return el.detachEvent("on" + e, fn);
          }
        }
      };
    })();
    return {
      Core: {
        Config: Config,
        Events: Events
      }
    };
  })(window, document);

}).call(this);
